plugins {
    id 'java'
    id 'application'
    id 'eclipse'
}

group = 'simpledb'
version = '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

def libDir = 'lib'

dependencies {
    implementation files("${libDir}/zql.jar")
    implementation "jline:jline:0.9.94"
    implementation "org.apache.mina:mina-core:2.0.4"
    implementation "org.apache.mina:mina-filter-compression:2.0.4"
    implementation "org.slf4j:slf4j-api:1.6.1"
    implementation "org.slf4j:slf4j-log4j12:1.6.1"
    implementation "log4j:log4j:1.2.17"
    implementation "com.jcraft:jzlib:1.0.7"

    testImplementation "junit:junit:4.13.1"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation "org.javassist:javassist:3.27.0-GA"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/java']
        }
    }
    test {
        java {
            srcDirs = ['test']
        }
    }
}

application {
    mainClass = 'simpledb.SimpleDb'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'simpledb.SimpleDb',
                'Class-Path': configurations.runtimeClasspath.files.collect { "../lib/${it.name}" }.join(' ')
        )
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-Xlint:unchecked"]
}

test {
    useJUnit()
    maxHeapSize = "128m"
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task systemTest(type: Test) {
    useJUnit()
    maxHeapSize = "128m"
    include 'simpledb/systemtest/**'
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    reportOn test, systemTest
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
    options.memberLevel = JavadocMemberLevel.PRIVATE
    options.addStringOption('Xdoclint:none', '-quiet')
}

task handin(type: Tar) {
    archiveFileName = "lab-handin.tar.bz2"
    compression = Compression.BZIP2
    from projectDir
    exclude 'build', '.gradle'
}

task testAndHandin(dependsOn: [test, systemTest, handin]) {
    group = 'Verification'
    description = 'Runs all tests and creates a tarball for submission'
}

task runTest(type: Test) {
    dependsOn testClasses
    if (project.hasProperty('test')) {
        filter {
            includeTestsMatching "simpledb.${project.property('test')}"
        }
    } else {
        throw new GradleException("You must specify a test with -Ptest=TestName")
    }
}

task runSysTest(type: Test) {
    dependsOn testClasses
    if (project.hasProperty('test')) {
        filter {
            includeTestsMatching "simpledb.systemtest.${project.property('test')}"
        }
    } else {
        throw new GradleException("You must specify a test with -Ptest=TestName")
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}